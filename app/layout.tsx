"use client"
import type { Metadata } from "next"
import localFont from "next/font/local"
import "./globals.css"
import React, { useEffect, useState } from "react"
import Providers from "@/lib/providers/providers"
import { getSelfId } from "@/lib/actions/server-actions"

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900"
})
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900"
})

/*export const metadata: { description: string; title: string } = {
  title: "Create Next App",
  description: "Generated by create next app"
}*/

export default function RootLayout({
  children,
  modal
}: Readonly<{
  children: React.ReactNode
  modal: React.ReactNode
}>) {
  const [uid, setUid] = useState<number>(0)
  useEffect(() => {
    const initData = async () => {
      await getSelfId().then((res) => {
        console.log("app layout set uid:", res)
        setUid(Number(res))
      })
    }
    initData()
  }, [])
  return (
    <html lang="en">
      <head>
        <meta
          name="viewport"
          content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no,minimal-ui,viewport-fit=cover"
        />
        <title></title>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-[100vh] flex flex-col`}
        suppressHydrationWarning
      >
        <div className="h-full overflow-y-auto">
          <Providers sid={uid}>
            {children}
            {modal}
            <div id="modal-root" />
          </Providers>
        </div>

      </body>
    </html>
  )
}
